@page "/editarperfil"
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager Navigation
@inject LoginService loginService
@using learncode.Models

<div class="edit-profile-page">
    <div class="edit-profile-form">
        <EditForm Model="@userData" OnValidSubmit="@HandleValidSubmit">
            <h1 class="pangolin-regular">Editar Perfil</h1>
            <div>
                <label for="email" class="pangolin-regular">Email</label>
                <InputText id="email" @bind-Value="userData.Email" placeholder="Digite seu email" class="input" />
            </div>
            <div>
                <label for="password" class="pangolin-regular">Senha</label>
                <InputText id="password" @bind-Value="userData.Password" type="password" placeholder="Digite sua senha" class="input" />
            </div>

            <!-- Botões -->
            <div class="button-group">
                <button type="submit" class="btn-save">Salvar</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private User userData = new User();

    protected override async Task OnInitializedAsync()
    {
        // Carregar dados do usuário ao inicializar a página
        // Você pode precisar de um método no LoginService para buscar os dados do usuário
        var userId = 1; // Substitua com a lógica para obter o ID do usuário
        userData = await loginService.GetUserByIdAsync(userId);
    }

    private async Task HandleValidSubmit()
    {
        await loginService.UpdateUserAsync(userData);

        // Redirecionar para a página de perfil ou para home após a atualização
        Navigation.NavigateTo("/perfil");
    }
}
